@using Application.Infrastructure
@using System.Security.Claims
@model HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <!-- CHAT ROOM LIST -->
    <div class="col-md-4">
        <ul class="list-group">
            @foreach (var chatRoom in Model.Chats)
            {
                <a asp-area="" asp-controller="Home" asp-action="ViewChat" asp-route-id="@chatRoom.Id">
                <li class="list-group-item d-flex justify-content-between align-items-center list-group-item-action">
                        @chatRoom.Name
                    <span class="badge bg-primary rounded-pill">Click to join</span>
                </li>
                </a>
            }
        </ul>
    </div>

    <!-- CURRENT CHATROOM -->
    <div class="col-md-8">
        @if (Model.SelectedChat is null)
        {
            <div class="alert alert-primary" role="alert">
                Select a chat to view the messages
            </div>

        }
        else
        {
            <div class="card text-center">
                <div class="card-header">
                    Featured
                </div>
                <div class="card-body overflow-auto" style="max-height: 50vh" id="messagesArea">
                    @await Component.InvokeAsync("ListMessages", new { selectedChatId = Model.SelectedChat!.Value })
                </div>
                <div class="card-footer">
                    <form class="row" asp-action="SendMessage" asp-controller="Home">
                        <input type="hidden" name="chatRoomId" id="selectedChat" value="@Model.SelectedChat" />
                        <div class="col-md-8">
                            <div class="form-floating">
                                <textarea class="form-control" placeholder="Leave a comment here" name="message" id="message"></textarea>
                                <label for="floatingTextarea">Enter your message here</label>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <button type="button" id="sendMessageButton" class="btn btn-primary mb-3">Send message</button>
                        </div>
                    </form>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts{
    @{
        //var userId = ((ClaimsIdentity)User.Identity)?.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? string.Empty;
        var userName = ((ClaimsIdentity)User.Identity)?.FindFirst(ClaimTypes.Name)?.Value ?? string.Empty;
    }

<script>
    var userName = '@userName';
    var sendMessageUrl = '@Url.Action("SendMessage", "Home")';

    var connection = new signalR.HubConnectionBuilder()
        .withUrl('@HubManager.MESSAGE_HUB_ENDPOINT')
        .build();

    connection.on('@HubManager.MESSAGE_HUB_RECEIVE_MESSAGE_METHOD', function (data) {
        if(data.chatRoomId == $('#selectedChat').val())
            AppendMessageToView(data, data.authorName == userName);
    });

    connection.on('@HubManager.MESSAGE_HUB_NOTIFY_ERROR_METHOD', function (data) {
            ToastErrorMessage(data.message);
    });

    connection.start().then(function () {
        console.log('Connection stabilished to MessageHub');
    }).catch(function (err) {
        console.error(err.toString());
        return console.error(err.toString());
    });
    
</script>
}